"""
Django settings for fitAlchem project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import socket


# deployment alternatives
HostName = socket.gethostname()
if HostName.startswith('hancock'):
	# Local
	DEBUG = True
	ALLOWED_HOSTS = ['localhost','127.0.0.1']
	
	INTERNAL_IPS = ['127.0.0.1']
	
	keyFile = '/Users/rik/hacks/fitAlchem_secretKey.txt'
	dbkf = '/Users/rik/hacks/psql4djangoPW.txt'
	# memcacheFile = '/Data/virtualenv/django/memcached.sock'

	# Static files (CSS, JavaScript, Images)
	# https://docs.djangoproject.com/en/1.10/howto/static-files/
	STATIC_URL = '/static/'

	FitAlchemDir = "/Data/whbFit/fitAlchem/"
	SiteURL = 'localhost:/fitAlchem'
	
elif HostName.find('webfaction') != -1:
	# Webfactions
	DEBUG = True # False  
	ALLOWED_HOSTS = ['fitalchem.electronicartifacts.com']

	print('##',ALLOWED_HOSTS)

	keyFile = '/home/rik/hacks/fitAlchem_secretKey.txt'
	dbkf = '/home/rik/hacks/psql4djangoPW.txt'
	# memcacheFile = '$HOME/memcached.sock'

	# https://docs.webfaction.com/software/django/config.html#serving-django-static-media
	STATIC_URL = '/static/'
	STATIC_ROOT = '/home/rik/webapps/djstatic/'
	
	FitAlchemDir = "/home/rik/webapps/djstatic/fitAlchem/"
	SiteURL = 'fitAlchem.electronicArtifacts.com'

else:
	import sys
	sys.exit('Unknown deployment host?! %s' % (HostName))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

with open(keyFile) as f:
	SECRET_KEY = f.read().strip()

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'jsoneditor',
    # 'django_select2',
    
    'moveGen',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if DEBUG:
		INSTALLED_APPS.append('debug_toolbar')

	# The order of MIDDLEWARE_CLASSES is important. You should include the
	# Debug Toolbar middleware as early as possible in the list. However, it
	# must come after any other middleware that encodes the response's
	# content, such as GZipMiddleware.
		MIDDLEWARE.insert(0,'debug_toolbar.middleware.DebugToolbarMiddleware')

ROOT_URLCONF = 'fitAlchem.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fitAlchem.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

with open(dbkf) as f:
        DBPW = f.read().strip()

DATABASES = {
    'default': {

		# local
		# 'ENGINE': 'django.db.backends.postgresql_psycopg2',
		#     'NAME': 'fitalchem',
		#         'USER': 'rik',
		#         'PASSWORD': 'fitalchem',
		#         'HOST': 'localhost',
		#         'PORT': '',

		# webfaction local		
		'ENGINE': 'django.db.backends.postgresql_psycopg2',
		'NAME': 'fitalchem', # Local: 'fitalchem', WebFaction: 'djdb4fa'
		'USER': 'rik',
		'PASSWORD': DBPW,
		'HOST':  '127.0.0.1',
		'PORT': '5432',

	   	# webfaction database hit remotely
# 		'ENGINE': 'django.contrib.gis.db.backends.postgis',
# 		'NAME': 'djdb4fa',
# 		'USER': 'rik',
# 		'PASSWORD': DBPW, 
# 		'HOST': '207.38.86.27', # web556.webfaction.com
		
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_URL = '/moveGen/need2login/'
LOGIN_REDIRECT_URL = '/moveGen/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

# STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/"),
]

JSON_EDITOR_JS = 'https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.8.0/jsoneditor.js' # '/static/js/jsoneditor.min.js'
JSON_EDITOR_CSS = 'https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/5.8.0/jsoneditor.css' # '/static/css/jsoneditor.min.css'

# u'//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js'
# SELECT2_JS = '/static/js/select2.min.js'
# SELECT2_CSS = '/static/css/select2.css'

print('settings: HostName', HostName)
print('settings: baseDir', BASE_DIR)
print('settings: database hosted by %s:%s' % (DATABASES['default']["HOST"],DATABASES['default']["NAME"]))

